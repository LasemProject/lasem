<?xml version="1.0" encoding="utf-8"?>
<svg version="1.2" baseProfile="tiny" xml:id="svg-root" width="100%" height="100%"
  viewBox="0 0 480 360" xmlns="http://www.w3.org/2000/svg"
  xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xe="http://www.w3.org/2001/xml-events">
  <!--======================================================================-->
  <!--=  Copyright 2008 World Wide Web Consortium, (Massachusetts          =-->
  <!--=  Institute of Technology, European Research Consortium for         =-->
  <!--=  Informatics and Mathematics (ERCIM), Keio University).            =-->
  <!--=  All Rights Reserved.                                              =-->
  <!--=  See http://www.w3.org/Consortium/Legal/.                          =-->
  <!--======================================================================-->
  <SVGTestCase xmlns="http://www.w3.org/2000/02/svg/testsuite/description/"
    reviewer="AG" owner="AE" desc="Test SVGSVGElement.getCurrentTime" status="accepted"
    approved="yes"
    version="$Revision: 1.7 $" testname="$RCSfile: udom-svg-226-t.svg,v $">
    <d:OperatorScript xmlns:d="http://www.w3.org/2000/02/svg/testsuite/description/" xmlns="http://www.w3.org/1999/xhtml">
      <p>
        Four animations begin at time 0 and end at times 1, 2, 5 and 9 seconds. Event listeners are registered
        for the "endEvent" event.
        As each animation ends, getCurrentTime() is called and verified with the expected time. The expected time is compared with
        the minimum time to take into account implementation-specific document time resolution.
        If all times have the expected values, the text changes from 'testing' to 'passed'
      </p>
    </d:OperatorScript>
  </SVGTestCase>
  <title xml:id="test-title">$RCSfile: udom-svg-226-t.svg,v $</title>
  <defs>
    <font-face
      font-family="SVGFreeSansASCII"
      unicode-range="U+0-7F">
      <font-face-src>
        <font-face-uri xlink:href="../images/SVGFreeSans.svg#ascii"/>
      </font-face-src>
    </font-face>
  </defs>
  <g xml:id="test-body-content" font-family="SVGFreeSansASCII,sans-serif" font-size="18">

    <handler type="text/ecmascript" xe:event="SVGLoad">
      <![CDATA[

      var svg_ns = "http://www.w3.org/2000/svg";
      var xlink_ns = "http://www.w3.org/1999/xlink";

      var topsvg = document.documentElement;
      var isPassed = true;

      function drawString( text, id)
      {
        var text_element = document.getElementById(id);
        if (isPassed)
        {
          text_element.setAttribute("fill", "#0C0");
        }
        else
        {
          text_element.textContent = text;
          text_element.setAttribute("fill", "#F00");
        }
      }

      function updateStatus()
      {
        var status = document.getElementById("TestStatus");
        if ( isPassed )
        {
          status.setTrait("#text", "passed");
          status.setAttribute("fill", "#0C0");
        }
        else
        {
          status.setTrait("#text", "failed");
          status.setAttribute("fill", "#F00");
        }
      }

      function doTimer1( )
      {
        curTime = topsvg.getCurrentTime( );
        if ( curTime >= 1 )
        {
          drawString( "", "time_test_1");
        }
        else
        {
          isPassed = false;
          drawString( "currentTime: " + curTime + ", expecting 1", "time_test_1" );
        }
      }

      function doTimer2( )
      {
        curTime = topsvg.getCurrentTime( );
        if ( curTime >= 2)
        {
          drawString( "", "time_test_2");
        }
        else
        {
          isPassed = false;
          drawString( "currentTime: " + curTime + ", expecting 2", "time_test_2" );
        }
      }
            
      function doTimer3( )
      {
        curTime = topsvg.getCurrentTime( );
        if ( curTime >= 5 )
        {
          drawString( "", "time_test_5");
        }
        else
        {
          isPassed = false;
          drawString( "currentTime: " + curTime + ", expecting 5", "time_test_5" );
        }
      }
      
      function doTimer4( )
      {
        curTime = topsvg.getCurrentTime( );
        if ( curTime >= 9 )
        {
          drawString( "", "time_test_9");
        }
        else
        {
          isPassed = false;
          drawString( "currentTime: " + curTime + ", expecting 9", "time_test_9" );
        }

        updateStatus();
      }

      var status = document.getElementById("TestStatus");
      status.setTrait("#text", "testing");

      try
      {
        document.getElementById("animationTimer1").addEventListener("endEvent", doTimer1, false);
        document.getElementById("animationTimer2").addEventListener("endEvent", doTimer2, false);
        document.getElementById("animationTimer3").addEventListener("endEvent", doTimer3, false);
        document.getElementById("animationTimer4").addEventListener("endEvent", doTimer4, false);
      }
      catch(e)
      {
        isPassed = false;
        drawString("Unexpected exception!", "test_status");
      }
      ]]>
    </handler>

    <defs>
      <g xml:id="myScale">
        <line x1="0" y1="0" x2="100" y2="0" stroke="black" stroke-width="3"/>
        <g text-anchor="middle" transform="translate(0,10)" font-size="8" fill="#555">
          <text x="0">0</text>
          <text x="10">1</text>
          <text x="20">2</text>
          <text x="30">3</text>
          <text x="40">4</text>
          <text x="50">5</text>
          <text x="60">6</text>
          <text x="70">7</text>
          <text x="80">8</text>
          <text x="90">9</text>
          <text x="100">10</text>
        </g>
      </g>
    </defs>

    <text x="240" y="40" text-anchor="middle">SVGSVGElement.getCurrentTime() - basic test</text>
    <g xml:id="anim2" transform="translate( 200, 75)">
      <use xlink:href="#myScale"/>
      <rect transform="translate(-2.5,-7)" width="5" height="14" fill="blue" fill-opacity="0.4" >
        <animate attributeName="x" from="0" to="100" dur="10" fill="freeze"/>
      </rect>

      <animate xml:id="animationTimer1" attributeName="display" begin="0" dur="1s" from="inline" to="inline"/>
      <animate xml:id="animationTimer2" attributeName="display" begin="0" dur="2s" from="inline" to="inline"/>
      <animate xml:id="animationTimer3" attributeName="display" begin="0" dur="5s" from="inline" to="inline"/>
      <animate xml:id="animationTimer4" attributeName="display" begin="0" dur="9s" from="inline" to="inline"/>

    </g>

    <g fill="black">
      <text xml:id="time_test_1" x="20" y="160">currentTime: 1</text>
      <text xml:id="time_test_2" x="20" y="180">currentTime: 2</text>
      <text xml:id="time_test_5" x="20" y="200">currentTime: 5</text>
      <text xml:id="time_test_9" x="20" y="220">currentTime: 9</text>
    </g>

    <rect x="200" y="100" width="100" height="30" stroke="blue" fill="none"/>
    <g fill="black">
      <text xml:id="TestStatus" x="225" y="120">failed</text>
    </g>
  </g>
  <g font-family="SVGFreeSansASCII,sans-serif" font-size="32">
    <text xml:id="revision" x="10" y="340" stroke="none"
      fill="black">$Revision: 1.7 $</text>
  </g>
  <rect xml:id="test-frame" x="1" y="1" width="478" height="358" fill="none" stroke="#000"/>
  <!-- comment out this watermark once the test is approved -->
  <!--<g xml:id="draft-watermark">
    <rect x="1" y="1" width="478" height="20" fill="red" stroke="black" stroke-width="1"/>
    <text font-family="SVGFreeSansASCII,sans-serif" font-weight="bold" font-size="20" x="240"
      text-anchor="middle" y="18" stroke-width="0.5" stroke="black" fill="white">DRAFT</text>
  </g>-->
</svg>
