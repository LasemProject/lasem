<?xml version="1.0" encoding="UTF-8"?>
<svg version="1.2" baseProfile="tiny" xml:id="svg-root" width="480" height="360" 
  viewBox="0 0 480 360" xmlns="http://www.w3.org/2000/svg" 
  xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xe="http://www.w3.org/2001/xml-events">
  <!--======================================================================-->
  <!--=  Copyright 2008 World Wide Web Consortium, (Massachusetts          =-->
  <!--=  Institute of Technology, European Research Consortium for         =-->
  <!--=  Informatics and Mathematics (ERCIM), Keio University).            =-->
  <!--=  All Rights Reserved.                                              =-->
  <!--=  See http://www.w3.org/Consortium/Legal/.                          =-->
  <!--======================================================================-->
  <SVGTestCase xmlns="http://www.w3.org/2000/02/svg/testsuite/description/"
    reviewer="ED" owner="AE" desc="Test SVGLocatable.getScreenBBox." status="accepted" 
    approved="yes"
    version="$Revision: 1.12 $" testname="$RCSfile: udom-svglocatable-202-t.svg,v $">
    <d:OperatorScript xmlns:d="http://www.w3.org/2000/02/svg/testsuite/description/" xmlns="http://www.w3.org/1999/xhtml">
      <p>
        Note, this test does not have 100% for the svg width and height on purpose as to have exact
        expected results for the screen bounding boxes
      </p>
      <p>
        This test draws a few basic shapes and checks for correct values from getScreenBBox().
        To pass, each returned bounding box must be correct (indicated by printing the values in green), and when this happens the text
        changes from 'failed' to 'passed'
      </p>
    </d:OperatorScript>
  </SVGTestCase>
  <title xml:id="test-title">$RCSfile: udom-svglocatable-202-t.svg,v $</title>
  <defs>
    <font-face
      font-family="SVGFreeSansASCII"
      unicode-range="U+0-7F">
      <font-face-src>
        <font-face-uri xlink:href="../images/SVGFreeSans.svg#ascii"/>
      </font-face-src>
    </font-face>
  </defs>
  <g xml:id="test-body-content" font-family="SVGFreeSansASCII,sans-serif" font-size="18">
    
    <handler type="text/ecmascript" xe:event="SVGLoad">
      <![CDATA[
  
      var svg_ns = "http://www.w3.org/2000/svg";
      var xlink_ns = "http://www.w3.org/1999/xlink";
  
      var count=0;
      var topsvg = document.documentElement;
      var startY = 80;
      var rowHeight = 12;
      var fontSize = "10";
      var isPassed = true;
  
 function drawString( text, color )
{
  node_to_insert=document.createElementNS(svg_ns,"text");
  node_to_insert.setAttributeNS(null,"font-size",fontSize);	
  var xVal = 5;
  node_to_insert.setAttributeNS(null,"x", xVal.toString() );	
  var yVal = startY + count++ * rowHeight;
  node_to_insert.setAttributeNS(null, "y",  yVal.toString()  );
  node_to_insert.setAttributeNS(null, "fill",  color  );
  node_to_insert.textContent=text ;
  document.getElementById( "test-body-content" ).appendChild(node_to_insert);          
 
}
    
      function verifyBBox( bbox, x, y, width, height, epsilon )
      {
        if
        (
          ( Math.abs(bbox.x - x ) < epsilon ) &&
          ( Math.abs(bbox.y - y ) < epsilon ) &&
          ( Math.abs(bbox.width - width ) < epsilon ) &&
          ( Math.abs(bbox.height - height ) < epsilon ) 
        )
        {
        return "green";
        }
        else
        {
          isPassed = false;
          drawString( "Results do not match expected values ( " + x + ", " + y + ", " + width + ", " + height + " )", "red" );
          return "red";
        }
      }
  
      function displayGetScreenBBox( )
      {
        drawString( "getScreenBBox()", "black" );
  
        var bbox = document.getElementById( "group1" ).getScreenBBox( );
        drawString( "[group1] " + bbox.x + " " + bbox.y + " " + bbox.width + " " + bbox.height, verifyBBox( bbox, 240, 60, 230, 200, 1 / 65535 ));
  
        bbox = document.getElementById( "rect1" ).getScreenBBox( );
        drawString( "[rect1] " + bbox.x + " " + bbox.y + " " + bbox.width + " " + bbox.height , verifyBBox( bbox, 330, 140, 100, 100, 1 / 65535 ));
  
        bbox = document.getElementById( "rect2" ).getScreenBBox( );
        drawString( "[rect2] " + bbox.x + " " + bbox.y + " " + bbox.width + " " + bbox.height , verifyBBox( bbox, 320, 130, 100, 100, 1 / 65535 ));
  
        bbox = document.getElementById( "group2" ).getScreenBBox( );
        drawString( "[group2] " + bbox.x + " " + bbox.y + " " + bbox.width + " " + bbox.height , verifyBBox( bbox, 240, 60, 230, 200, 1 / 65535 ));
  
        bbox = document.getElementById( "rect3" ).getScreenBBox( );
        drawString( "[rect3] " + bbox.x + " " + bbox.y + " " + bbox.width + " " + bbox.height , verifyBBox( bbox, 320, 150, 150, 50, 1 / 65535 ));
  
        bbox = document.getElementById( "circle1" ).getScreenBBox( );
        drawString( "[circle1] " + bbox.x + " " + bbox.y + " " + bbox.width + " " + bbox.height , verifyBBox( bbox, 240, 60, 200, 200, 1 / 65535 ));
        
        bbox = document.getElementById( "circle3" ).getScreenBBox( );
        drawString( "[circle3] " + bbox.x + " " + bbox.y + " " + bbox.width + " " + bbox.height , verifyBBox( bbox, 300, 20, 200, 200, 1 / 65535) );
        
        bbox = document.getElementById( "circle4" ).getScreenBBox( );
        drawString( "[circle4] " + bbox.x + " " + bbox.y + " " + bbox.width + " " + bbox.height , verifyBBox( bbox, 600, 20, 200, 200, 1 / 65535 ));
                
      }               
      
      displayGetScreenBBox();
  
      // remove from tree, get bbox
      drawString( "node removed from tree, should still have bounding box" , "black");
      circle = document.getElementById( "circle2" );
      document.getElementById( "body-content" ).removeChild(circle);
      bbox = circle.getScreenBBox( );
      if ( !bbox )
      {
        drawString( "screen bbox is null", "green" );
      }
      else
      {
        isPassed = false;
        drawString( "screen bbox is not null! result: " + bbox.x + " " + bbox.y + " " + bbox.width + " " + bbox.height , "red");
      }
          
      if( isPassed )
      {
        var status = document.getElementById("TestStatus");
        status.setTrait( "#text", "passed" );
        status.setAttribute( "fill", "green");
      }
  
      ]]>
    </handler>
      
    <g xml:id="body-content">
        
      <g xml:id="wrap" transform="translate(300,100)">
        <g xml:id="group1" transform="translate(10, 20)" fill="#ff0">
          <rect xml:id="rect1" transform="scale(2)" x="10" y="10" width="50" height="50"/>
          <rect xml:id="rect2" x="10" y="10" width="100" height="100"/>
          <g xml:id="group2" transform="translate(10, 20)">
            <rect xml:id="rect3" x="0" y="10" width="150" height="50"/>
            <circle xml:id="circle1" cx="20" cy="20" r="100" />
          </g>
        </g>
        <circle xml:id="circle3" cx="100" cy="20" r="100" fill="#ff0"/>
        <circle xml:id="circle4" cx="400" cy="20" r="100" fill="#ff0"/>
      </g>
    
      <circle xml:id="circle2" cx="20" cy="20" r="100" />
      
      <text  x="240" y="40" text-anchor="middle" >SVGLocatable.getScreenBBox() - basic test</text>
        
      <rect x="330" y="315" width="130" height="40" stroke="blue" fill="none"/>
      <g fill="black">
        <text xml:id="TestStatus" x="333" y="350" font-size="40">failed</text>
      </g>
    </g>
  </g>
  <g font-family="SVGFreeSansASCII,sans-serif" font-size="32">
    <text xml:id="revision" x="10" y="340" stroke="none"
      fill="black">$Revision: 1.12 $</text>
  </g>
  <rect xml:id="test-frame" x="1" y="1" width="478" height="358" fill="none" stroke="#000"/>
  <!--<g xml:id="draft-watermark">
    <rect x="1" y="1" width="478" height="20" fill="red" stroke="black" stroke-width="1"/>
    <text font-family="SVGFreeSansASCII,sans-serif" font-weight="bold" font-size="20" x="240"
      text-anchor="middle" y="18" stroke-width="0.5" stroke="black" fill="white">DRAFT</text>
  </g>-->
</svg>
