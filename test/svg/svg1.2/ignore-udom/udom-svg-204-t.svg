<?xml version="1.0" encoding="UTF-8"?>
<svg version="1.2" baseProfile="tiny" xml:id="svg-root" width="100%" height="100%"
  viewBox="0 0 480 360" xmlns="http://www.w3.org/2000/svg"
  xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xe="http://www.w3.org/2001/xml-events">
  <!--======================================================================-->
  <!--=  Copyright 2008 World Wide Web Consortium, (Massachusetts          =-->
  <!--=  Institute of Technology, European Research Consortium for         =-->
  <!--=  Informatics and Mathematics (ERCIM), Keio University).            =-->
  <!--=  All Rights Reserved.                                              =-->
  <!--=  See http://www.w3.org/Consortium/Legal/.                          =-->
  <!--======================================================================-->
  <SVGTestCase xmlns="http://www.w3.org/2000/02/svg/testsuite/description/"
    reviewer="AE" owner="CM" desc="Test the SVGElementInstance interface" status="accepted"
    approved="yes"
    version="$Revision: 1.7 $" testname="$RCSfile: udom-svg-204-t.svg,v $">
    <d:OperatorScript xmlns:d="http://www.w3.org/2000/02/svg/testsuite/description/" xmlns="http://www.w3.org/1999/xhtml">
      <p>
        This tests that the <tt>correspondingElement</tt> and
        <tt>correspondingUseElement</tt> attributes of the
        <b>SVGElementInstance</b> interface have expected values.
      </p>
      <p>
        The test consists of a single rectangle that is a descendant
        of a number of <tt>g</tt> elements and a couple of nested
        <tt>use</tt> shadow trees.  When the user clicks the rectangle,
        a <tt>mousedown</tt> event is dispatched, which travels up
        the nested shadow trees.  If the <tt>correspondingElement</tt> and
        <tt>correspondingUseElement</tt> attributes of the
        <b>SVGElementInstance</b> object (which is the <tt>currentTarget</tt>
        of the event) are correct, the rectangle becomes blue.  Otherwise,
        it becomes red.
      </p>
    </d:OperatorScript>
  </SVGTestCase>
  <title xml:id="test-title">$RCSfile: udom-svg-204-t.svg,v $</title>
  <defs>
    <font-face
      font-family="SVGFreeSansASCII"
      unicode-range="U+0-7F">
      <font-face-src>
        <font-face-uri xlink:href="../images/SVGFreeSans.svg#ascii"/>
      </font-face-src>
    </font-face>
  </defs>
  <g xml:id="test-body-content" font-family="SVGFreeSansASCII,sans-serif" font-size="18">
    <text x='10' y='42'>SVGElementInstance interface test</text>
    <text x='10' y='68' font-size='12'>Click the rectangle.  The test has passed if it turns blue.</text>
    <g display='none'>
      <g xml:id='g1'>
        <g xml:id='g2'>
          <rect xml:id='rect1' x='10' y='80' width='50' height='50'/>
        </g>
      </g>
      <g xml:id='g3'>
        <g xml:id='g4'>
          <use xml:id='use1' xlink:href='#g1'/>
        </g>
      </g>
      <g xml:id='g5'>
        <g xml:id='g6'>
          <use xml:id='use2' xlink:href='#g3'/>
        </g>
      </g>
    </g>
    <use xml:id='use3' xlink:href='#g5'/>
    <script type='application/ecmascript'>
      <![CDATA[
      targets = [];
      currentTargets = [];
      correspondingElements = [];
      correspondingUseElements = [];

      function listener(e) {
        targets.push(e.target);
        currentTargets.push(e.currentTarget);
        correspondingElements.push(e.currentTarget.correspondingElement);
        correspondingUseElements.push(e.currentTarget.correspondingUseElement);
      }

      // Get all of the elements.
      var ids = 'g1 g2 g3 g4 g5 g6 use1 use2 use3 rect1'.split(' ');
      for (var i in ids) {
        var id = ids[i];
        this[id] = document.getElementById(id);
        this[id].addEventListener('mousedown', listener, false);
      }

      function assertTrue(b) {
        if (!b) {
          throw 'assertion failed';
        }
      }

      function docListener(e) {
        document.removeEventListener('mousedown', docListener, false);
        var colour = 'blue';
        try {
          assertTrue(targets.length == 10);
          assertTrue(targets[0]);
          for (var i = 0; i < 9; i++) {
            // Test all the targets are the same.
            assertTrue(targets[i] == targets[i + 1]);

            // Test all the currentTargets are different.
            assertTrue(currentTargets[i] != currentTargets[i + 1]);

            // Test none of the currentTargets is null.
            assertTrue(currentTargets[i]);

            // Test that all correspondingUseElements are use3.
            assertTrue(correspondingUseElements[i] == use3);
          }
          assertTrue(currentTargets[9]);
          assertTrue(!correspondingUseElements[9]);

          // Test that all the correspondingElement are correct.
          assertTrue(correspondingElements[0] == rect1);
          assertTrue(correspondingElements[1] == g2);
          assertTrue(correspondingElements[2] == g1);
          assertTrue(correspondingElements[3] == use1);
          assertTrue(correspondingElements[4] == g4);
          assertTrue(correspondingElements[5] == g3);
          assertTrue(correspondingElements[6] == use2);
          assertTrue(correspondingElements[7] == g6);
          assertTrue(correspondingElements[8] == g5);
          assertTrue(!correspondingElements[9]);
        } catch (ex) {
          colour = 'red';
        }
        rect1.setAttributeNS(null, 'fill', colour);
      }

      document.addEventListener('mousedown', docListener, false);
    ]]>
    </script>
  </g>
  <g font-family="SVGFreeSansASCII,sans-serif" font-size="32">
    <text xml:id="revision" x="10" y="340" stroke="none"
      fill="black">$Revision: 1.7 $</text>
  </g>
  <rect xml:id="test-frame" x="1" y="1" width="478" height="358" fill="none" stroke="#000"/>
  <!-- comment out this watermark once the test is approved -->
  <!--<g xml:id="draft-watermark">
    <rect x="1" y="1" width="478" height="20" fill="red" stroke="black" stroke-width="1"/>
    <text font-family="SVGFreeSansASCII,sans-serif" font-weight="bold" font-size="20" x="240" 
      text-anchor="middle" y="18" stroke-width="0.5" stroke="black" fill="white">DRAFT</text>
  </g>-->
</svg>
