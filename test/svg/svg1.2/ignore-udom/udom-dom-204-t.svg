<?xml version="1.0" encoding="UTF-8"?>
<svg version="1.2" baseProfile="tiny" xml:id="svg-root" width="100%" height="100%"
  viewBox="0 0 480 360" xmlns="http://www.w3.org/2000/svg"
  xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xe="http://www.w3.org/2001/xml-events">
  <!--======================================================================-->
  <!--=  Copyright 2008 World Wide Web Consortium, (Massachusetts          =-->
  <!--=  Institute of Technology, European Research Consortium for         =-->
  <!--=  Informatics and Mathematics (ERCIM), Keio University).            =-->
  <!--=  All Rights Reserved.                                              =-->
  <!--=  See http://www.w3.org/Consortium/Legal/.                          =-->
  <!--======================================================================-->
  <SVGTestCase xmlns="http://www.w3.org/2000/02/svg/testsuite/description/"
    reviewer="ED" owner="CM" desc="Test the operation of Node.appendChild" status="accepted"
    approved="yes"
    version="$Revision: 1.6 $" testname="$RCSfile: udom-dom-204-t.svg,v $">
    <d:OperatorScript xmlns:d="http://www.w3.org/2000/02/svg/testsuite/description/" xmlns="http://www.w3.org/1999/xhtml">
      <p>
        This tests that the <tt>appendChild</tt> method of the
        <b>Node</b> interface works correctly.
      </p>
      <p>
        The test has been passed if six blue rectangles are displayed.
        Each rectangle indicates the result of a different aspect of
        <tt>appendChild</tt> behavior being tested:
      </p>
      <ul>
        <li>
          The first is a test of appending a newly created <tt>rect</tt> that
          is not yet in the document tree.
        </li>
        <li>
          The second is a test of appending a <tt>rect</tt> that is already
          somewhere else in the document tree.  In its initial position, it
          inherits <tt>fill='red'</tt>, and in its new position, it inherits
          <tt>fill='blue'</tt>.
        </li>
        <li>
          The third is a test of appending a <tt>rect</tt> to its current
          parent.  This results in the <tt>rect</tt> being moved to the
          final position in the list of child nodes.  In its initial
          position, a red <tt>rect</tt> occludes this blue one.  In its final
          position, this blue <tt>rect</tt> occludes the red one.
        </li>
        <li>
          The fourth is a test of appending a second element to the document
          node.  This results in a DOMException being thrown with code
          HIERARCHY_REQUEST_ERR.  If this exception is thrown, the
          <tt>rect</tt> is changed from red to blue.
        </li>
        <li>
          The fifth is a test of appending an element to one of its
          descendant elements.  This also results in a DOMException being
          thrown with code HIERARCHY_REQUEST_ERR.  If this exception is
          thrown, the <tt>rect</tt> is changed from red to blue.
        </li>
        <li>
          The sixth is a test of appending an element from another document
          into this document.  The element from the other document is obtained
          by calling <tt>parseXML</tt>.  A DOMException must be thrown with
          code WRONG_DOCUMENT_ERR.  If this exception is thrown, the
          <tt>rect</tt> is changed from red to blue.
        </li>
      </ul>
    </d:OperatorScript>
  </SVGTestCase>
  <title xml:id="test-title">$RCSfile: udom-dom-204-t.svg,v $</title>
  <defs>
    <font-face
      font-family="SVGFreeSansASCII"
      unicode-range="U+0-7F">
      <font-face-src>
        <font-face-uri xlink:href="../images/SVGFreeSans.svg#ascii"/>
      </font-face-src>
    </font-face>
  </defs>
  <g xml:id="test-body-content" font-family="SVGFreeSansASCII,sans-serif" font-size="18">
    <text x='10' y='42'>Node.appendChild test</text>
    <text x='10' y='150' font-size='12'>All six rectangles above must be blue.</text>
    <g xml:id='g1' fill='blue' transform='translate(0,30)'>
      <g xml:id='g2' fill='red'>
        <rect xml:id='rect1' x='10' y='30' width='50' height='50'/>
      </g>
      <rect xml:id='rect2' x='130' y='30' width='50' height='50' fill='blue'/>
      <rect xml:id='rect3' x='130' y='30' width='50' height='50' fill='red'/>
      <rect xml:id='rect4' x='190' y='30' width='50' height='50' fill='red'/>
      <rect xml:id='rect5' x='250' y='30' width='50' height='50' fill='red'/>
      <rect xml:id='rect6' x='310' y='30' width='50' height='50' fill='red'/>
      <g xml:id='g3'>
        <g xml:id='g4'/>
      </g>
    </g>
    <script type='application/ecmascript'>
      <![CDATA[
      SVGNS = 'http://www.w3.org/2000/svg';

      // Get all of the elements.
      var ids = 'g1 g2 g3 g4 rect1 rect2 rect3 rect4 rect5 rect6'.split(' ');
      for (var i in ids) {
        this[ids[i]] = document.getElementById(ids[i]);
      }

      // Test appending an element not already in the tree.
      newRect = document.createElementNS(SVGNS, 'rect');
      newRect.setAttributeNS(null, 'x', '70');
      newRect.setAttributeNS(null, 'y', '30');
      newRect.setAttributeNS(null, 'width', '50');
      newRect.setAttributeNS(null, 'height', '50');
      g1.appendChild(newRect);

      // Test appending an element already in the tree.
      g1.appendChild(rect1);

      // Test appending an element already in the tree to its same parent.
      g1.appendChild(rect2);

      newG = document.createElementNS(SVGNS, 'g');

      // Test appending a second element to the document.
      try {
        document.appendChild(newG);
      } catch (e) {
        if (e.code == DOMException.HIERARCHY_REQUEST_ERR) {
          rect4.setAttributeNS(null, 'fill', 'blue');
        }
      }

      // Test appending an element to its descendant.
      try {
        g4.appendChild(g3);
      } catch (e) {
        if (e.code == DOMException.HIERARCHY_REQUEST_ERR) {
          rect5.setAttributeNS(null, 'fill', 'blue');
        }
      }

      // Test appending an element from another document.
      try {
        var newDoc = parseXML('<a/>', null);
        g1.appendChild(newDoc.documentElement);
      } catch (e) {
        if (e.code == DOMException.WRONG_DOCUMENT_ERR) {
          rect6.setAttributeNS(null, 'fill', 'blue');
        }
      }
    ]]>
    </script>
  </g>
  <g font-family="SVGFreeSansASCII,sans-serif" font-size="32">
    <text xml:id="revision" x="10" y="340" stroke="none"
      fill="black">$Revision: 1.6 $</text>
  </g>
  <rect xml:id="test-frame" x="1" y="1" width="478" height="358" fill="none" stroke="#000"/>
  <!-- comment out this watermark once the test is approved -->
  <!--<g xml:id="draft-watermark">
    <rect x="1" y="1" width="478" height="20" fill="red" stroke="black" stroke-width="1"/>
    <text font-family="SVGFreeSansASCII,sans-serif" font-weight="bold" font-size="20" x="240"
      text-anchor="middle" y="18" stroke-width="0.5" stroke="black" fill="white">DRAFT</text>
  </g>-->
</svg>
