<?xml version="1.0" encoding="UTF-8"?>
<svg version="1.2" baseProfile="tiny" xml:id="svg-root" width="100%" height="100%"
  viewBox="0 0 480 360" xmlns="http://www.w3.org/2000/svg"
  xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xe="http://www.w3.org/2001/xml-events">
  <!--======================================================================-->
  <!--=  Copyright 2008 World Wide Web Consortium, (Massachusetts          =-->
  <!--=  Institute of Technology, European Research Consortium for         =-->
  <!--=  Informatics and Mathematics (ERCIM), Keio University).            =-->
  <!--=  All Rights Reserved.                                              =-->
  <!--=  See http://www.w3.org/Consortium/Legal/.                          =-->
  <!--======================================================================-->
  <SVGTestCase xmlns="http://www.w3.org/2000/02/svg/testsuite/description/"
    reviewer="ED" owner="CM" desc="Test ElementTimeControl's beginElement and beginElementAt methods with different begin instance time lists" status="accepted"
    approved="yes"
    version="$Revision: 1.7 $" testname="$RCSfile: udom-smil-202-t.svg,v $">
    <d:OperatorScript xmlns:d="http://www.w3.org/2000/02/svg/testsuite/description/" xmlns="http://www.w3.org/1999/xhtml">
      <p>
        This tests the <tt>beginElement</tt> and <tt>beginElementAt</tt>
        methods of the <b>ElementTimeControl</b> interface, with different
        begin instance time lists.
      </p>
      <p>
        The test has been passed if all the three rectangles and the circle
        become blue one second after clicking the circle.
      </p>
      <p>
        The test consists of a pink circle and three animated rectangles.
        To perform the test, the user must click the pink circle.
        The three rectangles all have animations that <tt>begin='0s'</tt>
        and run indefinitely, and are also set to <tt>restart='none'</tt>.
        Clicking the circle will attempt to begin the three animations as follows:
      </p>
      <ul>
        <li>
          The first rectangle's animation has <tt>.beginElement()</tt> called.
        </li>
        <li>
          The second rectangle's animation has <tt>.beginElementAt(0)</tt> called.
        </li>
        <li>
          The third rectangle's animation has <tt>.beginElementAt(0.5)</tt> called.
        </li>
      </ul>
      <p>
        All three animations should not begin with these method calls, since
        the animations have already started and are set to <tt>restart='none'</tt>.
        If an animation does restart, its <tt>endEvent</tt> will be captured
        and the rectangle will become red.  If the animation does not restart,
        it will become blue one second after clicking the pink circle.
      </p>
      <p>
        In addition, the circle should become blue one second after clicking
        it.  This indicates that the implementation correctly dispatches an
        <tt>endEvent</tt> when an element restarts.
      </p>
    </d:OperatorScript>
  </SVGTestCase>
  <title xml:id="test-title">$RCSfile: udom-smil-202-t.svg,v $</title>
  <defs>
    <font-face
      font-family="SVGFreeSansASCII"
      unicode-range="U+0-7F">
      <font-face-src>
        <font-face-uri xlink:href="../images/SVGFreeSans.svg#ascii"/>
      </font-face-src>
    </font-face>
  </defs>
  <g xml:id="test-body-content" font-family="SVGFreeSansASCII,sans-serif" font-size="18">
    <text x='10' y='42'>ElementTimeControl.beginElement(At) test 2</text>
    <text x='10' y='68' font-size='12'>Click the pink circle.  The test has passed if the rectangles</text>
    <text x='10' y='81' font-size='12'>and the circle become blue one second after clicking the circle.</text>
    <g stroke-width='4'>
      <g stroke='black'>
        <circle xml:id='circle1' cx='230' cy='140' r='20' fill='rgb(204,0,102)'>
          <set xml:id='set1' attributeName='display' to='inline' begin='0s; mousedown+1s'/>
          <set attributeName='fill' to='rgb(0,102,204)' begin='set1.endEvent'/>
        </circle>
        <g>
          <set attributeName='fill' to='rgb(0,102,204)' begin='circle1.mousedown+1s' restart='never'/>
          <rect xml:id='rect1' x='115' y='200' width='30' height='30'>
            <animate xml:id='animate1' attributeName='display' values='inline' begin='0s' restart='never'/>
          </rect>
          <rect xml:id='rect2' x='215' y='200' width='30' height='30'>
            <animate xml:id='animate2' attributeName='display' values='inline' begin='0s' restart='never'/>
          </rect>
          <rect xml:id='rect3' x='315' y='200' width='30' height='30'>
            <animate xml:id='animate3' attributeName='display' values='inline' begin='0s' restart='never'/>
          </rect>
        </g>
      </g>
    </g>
    <script type='application/ecmascript'>
      <![CDATA[
      // Get all of the elements.
      var ids = 'animate1 animate2 animate3 circle1'.split(' ');
      for (var i in ids) {
        this[ids[i]] = document.getElementById(ids[i]);
      }

      // Listener for clicking on the circle.
      function listener(e) {
        document.getElementById('animate1').beginElement();
        document.getElementById('animate2').beginElementAt(0);
        document.getElementById('animate3').beginElementAt(0.5);
        e.target.removeEventListener('mousedown', listener, false);
      }
      document.getElementById('circle1').addEventListener
        ('mousedown', listener, false);

      // Listeners on the animations, to make sure that an 'end' event is not
      // dispatched.
      function makeListener(i) {
        return function(e) {
          document.getElementById('rect' + i).setAttributeNS(null, 'fill', 'red');
        };
      }
      for (var i = 1; i <= 3; i++) {
        document.getElementById('animate' + i).addEventListener
          ('endEvent', makeListener(i), false);
      }
    ]]>
    </script>
  </g>
  <g font-family="SVGFreeSansASCII,sans-serif" font-size="32">
    <text xml:id="revision" x="10" y="340" stroke="none"
      fill="black">$Revision: 1.7 $</text>
  </g>
  <rect xml:id="test-frame" x="1" y="1" width="478" height="358" fill="none" stroke="#000"/>
  <!-- comment out this watermark once the test is approved -->
  <!--<g xml:id="draft-watermark">
    <rect x="1" y="1" width="478" height="20" fill="red" stroke="black" stroke-width="1"/>
    <text font-family="SVGFreeSansASCII,sans-serif" font-weight="bold" font-size="20" x="240" 
      text-anchor="middle" y="18" stroke-width="0.5" stroke="black" fill="white">DRAFT</text>
  </g>-->
</svg>
